openapi: 3.0.0

info:
  title: API document for Banking Ledger System
  version: 1.0.0
    
servers:
  - url: http://localhost:{port}

paths:
  /accounts/{id}:        
    get:
      tags:
        - "Accounts"
      summary: View current balance for customer
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true      
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountReadModel"
                
  /accounts/create:        
    post:
      tags:
        - "Accounts"
      summary: Create account for customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateBody"      
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountReadModel"              

  /accounts/create-admin:        
    post:
      tags:
        - "Accounts"
      summary: Create account for customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateBody"      
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountReadModel"           

  /transactions:      
    get:
      tags:
        - "Transactions"
      summary: Get transactions basic on input account id
      parameters:
        - in: query
          name: account_id
          schema:
            type: string
          description: The tareget account id for getting transactions
        - in: query
          name: asc
          schema:
            type: integer   
            enum: [1,-1]
          description: Sorting option for transaction time, 1 means the earliest record will be the first result, -1 mean latest record will be the first result.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
    post:
      tags:
        - "Transactions"
      summary: Perform withdraw, deposit and transfer operation
      parameters:
        - in: header
          name: account_id
          schema:
            type: string
            format: uuid
            example: 67623cbc-b1a6-4aab-8244-158c557dca25
          required: true      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"           
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountReadModel"
                
  /transactions/{id}/undo:        
    post:
      tags:
        - "Transactions"
      summary: Undo a transaction, should be performed by operation team only. It will return an updated balance of the account
      parameters:
        - in: header
          name: account_id
          schema:
            type: string
            format: uuid
            example: 67623cbc-b1a6-4aab-8244-158c557dca25
          required: true            
        - in: path
          name: id
          schema:
            type: string
          required: true            
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountReadModel"
                
components:
  schemas:
    AccountReadModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string               
        balance:
          type: integer       
    AccountCreateBody:
      type: object
      properties:
        name:
          type: string               
        password:
          type: string      
    Transaction:
      type: object
      properties:
        id:
          type: string    
          example: "3d5d63f5-8d25-4109-ad3f-259527108dcd"
        time:
          type: string            
        operation:
          type: string
          enum: [deposit, withdraw, transfer]
        triggeredBy:
          type: string
          description: account id that trigger/request this transaction
          example: 8c230e58-49e1-47ab-add5-f937b40f9123
        body:
          type: object
          properties:
            from:
              type: string               
            to:
              type: string      
            amount:
              type: integer   
            notes:
              type: string        
        notes:
          type: string
          description: additional information
          example: "fix transaction: 04b3d1c0-23ea-4e69-9f6d-54ac7297ac0b"
    Transactions:
      type: array
      items:
        $ref: "#/components/schemas/Transaction"